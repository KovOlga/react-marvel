{"version":3,"file":"static/js/764.07010d40.chunk.js","mappings":"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","sources":["webpack://react-marvel/./src/components/char-info/char-info.module.css?8721","webpack://react-marvel/./src/components/skeleton/skeleton.module.css?9a0f","components/skeleton/skeleton.js","components/char-info/char-info.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"charInfo\":\"char-info_charInfo__g4FA9\",\"charinfo__basics\":\"char-info_charinfo__basics__RWjoj\",\"charinfo__img\":\"char-info_charinfo__img__Ti3KF\",\"charinfo__mini\":\"char-info_charinfo__mini__GpPtN\",\"charinfo__name\":\"char-info_charinfo__name__tDouU\",\"charinfo__descr\":\"char-info_charinfo__descr__S1USg\",\"charinfo__btns\":\"char-info_charinfo__btns__kB553\",\"button\":\"char-info_button__GuDd-\",\"button__main\":\"char-info_button__main__0KzsP\",\"button__secondary\":\"char-info_button__secondary__rdm48\",\"inner\":\"char-info_inner__oR+Yn\",\"inner__main\":\"char-info_inner__main__PaK9o\",\"inner__secondary\":\"char-info_inner__secondary__KEJra\",\"comics\":\"char-info_comics__fPNl9\",\"comics__list\":\"char-info_comics__list__5XBFX\",\"comics__item\":\"char-info_comics__item__3voa+\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"skeleton_title__fZNhA\",\"skeleton\":\"skeleton_skeleton__ufFB6\",\"skeleton__header\":\"skeleton_skeleton__header__L5P98\",\"skeleton__circle\":\"skeleton_skeleton__circle__MQ9qe\",\"skeleton__mini\":\"skeleton_skeleton__mini__IEWod\",\"skeleton__block\":\"skeleton_skeleton__block__sI15W\",\"pulse\":\"skeleton_pulse__wgjUg\"};","import styles from \"./skeleton.module.css\";\r\n\r\nconst Skeleton = () => {\r\n  return (\r\n    <>\r\n      <p className={styles.title}>\r\n        Please select a character to see information\r\n      </p>\r\n      <div className={styles.skeleton}>\r\n        <div className={`${styles.pulse} ${styles.skeleton__header}`}>\r\n          <div className={`${styles.pulse} ${styles.skeleton__circle}`}></div>\r\n          <div className={`${styles.pulse} ${styles.skeleton__mini}`}></div>\r\n        </div>\r\n        <div className={`${styles.pulse} ${styles.skeleton__block}`}></div>\r\n        <div className={`${styles.pulse} ${styles.skeleton__block}`}></div>\r\n        <div className={`${styles.pulse} ${styles.skeleton__block}`}></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import styles from \"./char-info.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../error-message/error-message\";\r\nimport Skeleton from \"../skeleton/skeleton\";\r\nimport PropTypes from \"prop-types\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { useContext } from \"react\";\r\nimport SelectedCharContext from \"../context/charContext\";\r\n\r\nconst CharInfo = () => {\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n  const [char, setChar] = useState(null);\r\n\r\n  const charId = useContext(SelectedCharContext);\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, [charId]);\r\n\r\n  const updateChar = () => {\r\n    if (!charId) {\r\n      return;\r\n    }\r\n    clearError();\r\n    getCharacter(charId).then((char) => {\r\n      setChar(char);\r\n    });\r\n  };\r\n\r\n  const skeleton = char || error || loading ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? (\r\n    <CharView char={char} />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.charInfo}>\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CharView = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n  let imageStyle = { objectFit: \"cover\" };\r\n  if (\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n  ) {\r\n    imageStyle = { objectFit: \"contain\" };\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.charinfo__basics}>\r\n        <img\r\n          className={styles.charinfo__img}\r\n          src={thumbnail}\r\n          alt={name}\r\n          style={imageStyle}\r\n        />\r\n        <div className={styles.charinfo__mini}>\r\n          <h2 className={styles.charinfo__name}>{name}</h2>\r\n          <div className={styles.charinfo__btns}>\r\n            <a\r\n              href={homepage}\r\n              className={`${styles.button} ${styles.button__main}`}\r\n            >\r\n              <p className={`${styles.inner} ${styles.inner__main}`}>\r\n                homepage\r\n              </p>\r\n            </a>\r\n            <a\r\n              href={wiki}\r\n              className={`${styles.button} ${styles.button__secondary}`}\r\n            >\r\n              <p className={`${styles.inner} ${styles.inner__secondary}`}>\r\n                Wiki\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p className={styles.charinfo__descr}>{description}</p>\r\n      <div>\r\n        <p className={styles.comics}>Comics:</p>\r\n        <ul className={styles.comics__list}>\r\n          {comics.length > 0 ? null : \"No comics with this character\"}\r\n          {comics.map((comic, i) => {\r\n            return (\r\n              <li key={i} className={styles.comics__item}>\r\n                {comic.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// CharInfo.propTypes = {\r\n//   charId: PropTypes.number,\r\n// };\r\n\r\nexport default CharInfo;\r\n"],"names":["_jsxs","_Fragment","children","_jsx","className","styles","concat","CharView","_ref","char","name","description","thumbnail","homepage","wiki","comics","imageStyle","objectFit","src","alt","style","href","length","map","comic","i","_useMarvelService","useMarvelService","loading","error","getCharacter","clearError","_useState","useState","_useState2","_slicedToArray","setChar","charId","useContext","SelectedCharContext","useEffect","updateChar","then","skeleton","Skeleton","errorMessage","ErrorMessage","spinner","Spinner","content"],"sourceRoot":""}